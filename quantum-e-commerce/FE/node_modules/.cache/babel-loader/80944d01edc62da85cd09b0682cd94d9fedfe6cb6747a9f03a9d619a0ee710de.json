{"ast":null,"code":"// client.js\nimport axios from'axios';// Base URL của Django API\nconst API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:8080';// Tạo axios instance\nconst apiClient=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'},timeout:10000// 10 seconds timeout\n});// Request interceptor - thêm token vào header\napiClient.interceptors.request.use(config=>{const token=localStorage.getItem('access_token');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;},error=>{return Promise.reject(error);});// Response interceptor - xử lý lỗi và refresh token\napiClient.interceptors.response.use(response=>{return response;},async error=>{var _error$response;const originalRequest=error.config;// Nếu token hết hạn (401) và chưa retry\nif(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401&&!originalRequest._retry){originalRequest._retry=true;try{const refreshToken=localStorage.getItem('refresh_token');if(refreshToken){// Sử dụng endpoint refresh token của Django SimpleJWT\nconst response=await axios.post(\"\".concat(API_BASE_URL,\"/api/token/refresh/\"),{refresh:refreshToken});const newAccessToken=response.data.access;localStorage.setItem('access_token',newAccessToken);// Retry request với token mới\noriginalRequest.headers.Authorization=\"Bearer \".concat(newAccessToken);return apiClient(originalRequest);}}catch(refreshError){// Refresh token cũng hết hạn, đăng xuất user\nlocalStorage.removeItem('access_token');localStorage.removeItem('refresh_token');localStorage.removeItem('user');// Xóa thông tin user\nwindow.location.href='/login';return Promise.reject(refreshError);}}return Promise.reject(error);});export default apiClient;// Export thêm các helper functions\nexport const saveTokens=tokens=>{if(tokens.access){localStorage.setItem('access_token',tokens.access);}if(tokens.refresh){localStorage.setItem('refresh_token',tokens.refresh);}};export const clearTokens=()=>{localStorage.removeItem('access_token');localStorage.removeItem('refresh_token');localStorage.removeItem('user');};export const getAccessToken=()=>{return localStorage.getItem('access_token');};export const isAuthenticated=()=>{return!!getAccessToken();};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","apiClient","create","baseURL","headers","timeout","interceptors","request","use","config","token","localStorage","getItem","Authorization","concat","error","Promise","reject","response","_error$response","originalRequest","status","_retry","refreshToken","post","refresh","newAccessToken","data","access","setItem","refreshError","removeItem","window","location","href","saveTokens","tokens","clearTokens","getAccessToken","isAuthenticated"],"sources":["D:/BaitapUIT/Mat_Ma_Hoc/new_final_project_clone/quantum-e-commerce/FE/src/api/client.js"],"sourcesContent":["// client.js\r\nimport axios from 'axios';\r\n\r\n// Base URL của Django API\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080';\r\n\r\n// Tạo axios instance\r\nconst apiClient = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  timeout: 10000, // 10 seconds timeout\r\n});\r\n\r\n// Request interceptor - thêm token vào header\r\napiClient.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('access_token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor - xử lý lỗi và refresh token\r\napiClient.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  async (error) => {\r\n    const originalRequest = error.config;\r\n\r\n    // Nếu token hết hạn (401) và chưa retry\r\n    if (error.response?.status === 401 && !originalRequest._retry) {\r\n      originalRequest._retry = true;\r\n\r\n      try {\r\n        const refreshToken = localStorage.getItem('refresh_token');\r\n        if (refreshToken) {\r\n          // Sử dụng endpoint refresh token của Django SimpleJWT\r\n          const response = await axios.post(`${API_BASE_URL}/api/token/refresh/`, {\r\n            refresh: refreshToken\r\n          });\r\n          \r\n          const newAccessToken = response.data.access;\r\n          localStorage.setItem('access_token', newAccessToken);\r\n          \r\n          // Retry request với token mới\r\n          originalRequest.headers.Authorization = `Bearer ${newAccessToken}`;\r\n          return apiClient(originalRequest);\r\n        }\r\n      } catch (refreshError) {\r\n        // Refresh token cũng hết hạn, đăng xuất user\r\n        localStorage.removeItem('access_token');\r\n        localStorage.removeItem('refresh_token');\r\n        localStorage.removeItem('user'); // Xóa thông tin user\r\n        window.location.href = '/login';\r\n        return Promise.reject(refreshError);\r\n      }\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default apiClient;\r\n\r\n// Export thêm các helper functions\r\nexport const saveTokens = (tokens) => {\r\n  if (tokens.access) {\r\n    localStorage.setItem('access_token', tokens.access);\r\n  }\r\n  if (tokens.refresh) {\r\n    localStorage.setItem('refresh_token', tokens.refresh);\r\n  }\r\n};\r\n\r\nexport const clearTokens = () => {\r\n  localStorage.removeItem('access_token');\r\n  localStorage.removeItem('refresh_token');\r\n  localStorage.removeItem('user');\r\n};\r\n\r\nexport const getAccessToken = () => {\r\n  return localStorage.getItem('access_token');\r\n};\r\n\r\nexport const isAuthenticated = () => {\r\n  return !!getAccessToken();\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}