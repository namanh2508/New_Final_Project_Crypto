{"ast":null,"code":"import apiClient from'../api/client';import{API_ENDPOINTS}from'../api/endpoints';class OrderService{// Tạo đơn hàng\nasync createOrder(orderData){try{const response=await apiClient.post(API_ENDPOINTS.CREATE_ORDER,orderData);return response.data;}catch(error){throw this.handleError(error);}}// Lấy danh sách đơn hàng\nasync getOrders(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};try{const response=await apiClient.get(API_ENDPOINTS.ORDERS,{params});return response.data;}catch(error){throw this.handleError(error);}}// Lấy chi tiết đơn hàng\nasync getOrderDetail(id){try{const response=await apiClient.get(API_ENDPOINTS.ORDER_DETAIL(id));return response.data;}catch(error){throw this.handleError(error);}}// Xác nhận đơn hàng (seller)\nasync confirmOrder(id){try{const response=await apiClient.post(\"\".concat(API_ENDPOINTS.ORDER_DETAIL(id),\"confirm/\"));return response.data;}catch(error){throw this.handleError(error);}}// Giao hàng (seller)\nasync shipOrder(id,trackingNumber){try{const response=await apiClient.post(\"\".concat(API_ENDPOINTS.ORDER_DETAIL(id),\"ship/\"),{tracking_number:trackingNumber});return response.data;}catch(error){throw this.handleError(error);}}// Hủy đơn hàng\nasync cancelOrder(id,reason){try{const response=await apiClient.post(\"\".concat(API_ENDPOINTS.ORDER_DETAIL(id),\"cancel/\"),{reason});return response.data;}catch(error){throw this.handleError(error);}}// Xác nhận nhận hàng (buyer)\nasync completeOrder(id){try{const response=await apiClient.post(\"\".concat(API_ENDPOINTS.ORDER_DETAIL(id),\"complete/\"));return response.data;}catch(error){throw this.handleError(error);}}// Lấy đơn vị vận chuyển\nasync getLogisticsProviders(){try{const response=await apiClient.get(API_ENDPOINTS.LOGISTICS_PROVIDERS);return response.data;}catch(error){throw this.handleError(error);}}// Lấy phương thức thanh toán\nasync getPaymentMethods(){try{const response=await apiClient.get(API_ENDPOINTS.PAYMENT_METHODS);return response.data;}catch(error){throw this.handleError(error);}}handleError(error){var _error$response;if((_error$response=error.response)!==null&&_error$response!==void 0&&_error$response.data){return{message:error.response.data.message||'Có lỗi xảy ra',errors:error.response.data.errors||{},status:error.response.status};}return{message:'Lỗi kết nối mạng',errors:{},status:0};}}export default new OrderService();","map":{"version":3,"names":["apiClient","API_ENDPOINTS","OrderService","createOrder","orderData","response","post","CREATE_ORDER","data","error","handleError","getOrders","params","arguments","length","undefined","get","ORDERS","getOrderDetail","id","ORDER_DETAIL","confirmOrder","concat","shipOrder","trackingNumber","tracking_number","cancelOrder","reason","completeOrder","getLogisticsProviders","LOGISTICS_PROVIDERS","getPaymentMethods","PAYMENT_METHODS","_error$response","message","errors","status"],"sources":["D:/BaitapUIT/Mat_Ma_Hoc/new_final_project_clone/quantum-e-commerce/FE/src/services/orderService.js"],"sourcesContent":["import apiClient from '../api/client';\r\nimport { API_ENDPOINTS } from '../api/endpoints';\r\n\r\nclass OrderService {\r\n  // Tạo đơn hàng\r\n  async createOrder(orderData) {\r\n    try {\r\n      const response = await apiClient.post(API_ENDPOINTS.CREATE_ORDER, orderData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Lấy danh sách đơn hàng\r\n  async getOrders(params = {}) {\r\n    try {\r\n      const response = await apiClient.get(API_ENDPOINTS.ORDERS, { params });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Lấy chi tiết đơn hàng\r\n  async getOrderDetail(id) {\r\n    try {\r\n      const response = await apiClient.get(API_ENDPOINTS.ORDER_DETAIL(id));\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Xác nhận đơn hàng (seller)\r\n  async confirmOrder(id) {\r\n    try {\r\n      const response = await apiClient.post(`${API_ENDPOINTS.ORDER_DETAIL(id)}confirm/`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Giao hàng (seller)\r\n  async shipOrder(id, trackingNumber) {\r\n    try {\r\n      const response = await apiClient.post(`${API_ENDPOINTS.ORDER_DETAIL(id)}ship/`, {\r\n        tracking_number: trackingNumber\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Hủy đơn hàng\r\n  async cancelOrder(id, reason) {\r\n    try {\r\n      const response = await apiClient.post(`${API_ENDPOINTS.ORDER_DETAIL(id)}cancel/`, { reason });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Xác nhận nhận hàng (buyer)\r\n  async completeOrder(id) {\r\n    try {\r\n      const response = await apiClient.post(`${API_ENDPOINTS.ORDER_DETAIL(id)}complete/`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Lấy đơn vị vận chuyển\r\n  async getLogisticsProviders() {\r\n    try {\r\n      const response = await apiClient.get(API_ENDPOINTS.LOGISTICS_PROVIDERS);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Lấy phương thức thanh toán\r\n  async getPaymentMethods() {\r\n    try {\r\n      const response = await apiClient.get(API_ENDPOINTS.PAYMENT_METHODS);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  handleError(error) {\r\n    if (error.response?.data) {\r\n      return {\r\n        message: error.response.data.message || 'Có lỗi xảy ra',\r\n        errors: error.response.data.errors || {},\r\n        status: error.response.status\r\n      };\r\n    }\r\n    return { message: 'Lỗi kết nối mạng', errors: {}, status: 0 };\r\n  }\r\n}\r\n\r\nexport default new OrderService();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}