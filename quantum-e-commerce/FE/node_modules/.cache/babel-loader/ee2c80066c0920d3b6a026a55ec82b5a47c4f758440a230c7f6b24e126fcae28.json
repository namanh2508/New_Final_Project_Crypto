{"ast":null,"code":"import apiClient from '../api/client';\nimport { API_ENDPOINTS } from '../api/endpoints';\nclass OrderService {\n  // Tạo đơn hàng\n  async createOrder(orderData) {\n    try {\n      const response = await apiClient.post(API_ENDPOINTS.CREATE_ORDER, orderData);\n      return response.data;\n    } catch (error) {\n      throw this.handleError(error);\n    }\n  }\n\n  // Lấy danh sách đơn hàng\n  async getOrders(params = {}) {\n    try {\n      const response = await apiClient.get(API_ENDPOINTS.ORDERS, {\n        params\n      });\n      return response.data;\n    } catch (error) {\n      throw this.handleError(error);\n    }\n  }\n\n  // Lấy chi tiết đơn hàng\n  async getOrderDetail(id) {\n    try {\n      const response = await apiClient.get(API_ENDPOINTS.ORDER_DETAIL(id));\n      return response.data;\n    } catch (error) {\n      throw this.handleError(error);\n    }\n  }\n\n  // Xác nhận đơn hàng (seller)\n  async confirmOrder(id) {\n    try {\n      const response = await apiClient.post(`${API_ENDPOINTS.ORDER_DETAIL(id)}confirm/`);\n      return response.data;\n    } catch (error) {\n      throw this.handleError(error);\n    }\n  }\n\n  // Giao hàng (seller)\n  async shipOrder(id, trackingNumber) {\n    try {\n      const response = await apiClient.post(`${API_ENDPOINTS.ORDER_DETAIL(id)}ship/`, {\n        tracking_number: trackingNumber\n      });\n      return response.data;\n    } catch (error) {\n      throw this.handleError(error);\n    }\n  }\n\n  // Hủy đơn hàng\n  async cancelOrder(id, reason) {\n    try {\n      const response = await apiClient.post(`${API_ENDPOINTS.ORDER_DETAIL(id)}cancel/`, {\n        reason\n      });\n      return response.data;\n    } catch (error) {\n      throw this.handleError(error);\n    }\n  }\n\n  // Xác nhận nhận hàng (buyer)\n  async completeOrder(id) {\n    try {\n      const response = await apiClient.post(`${API_ENDPOINTS.ORDER_DETAIL(id)}complete/`);\n      return response.data;\n    } catch (error) {\n      throw this.handleError(error);\n    }\n  }\n\n  // Lấy đơn vị vận chuyển\n  async getLogisticsProviders() {\n    try {\n      const response = await apiClient.get(API_ENDPOINTS.LOGISTICS_PROVIDERS);\n      return response.data;\n    } catch (error) {\n      throw this.handleError(error);\n    }\n  }\n\n  // Lấy phương thức thanh toán\n  async getPaymentMethods() {\n    try {\n      const response = await apiClient.get(API_ENDPOINTS.PAYMENT_METHODS);\n      return response.data;\n    } catch (error) {\n      throw this.handleError(error);\n    }\n  }\n  handleError(error) {\n    var _error$response;\n    if ((_error$response = error.response) !== null && _error$response !== void 0 && _error$response.data) {\n      return {\n        message: error.response.data.message || 'Có lỗi xảy ra',\n        errors: error.response.data.errors || {},\n        status: error.response.status\n      };\n    }\n    return {\n      message: 'Lỗi kết nối mạng',\n      errors: {},\n      status: 0\n    };\n  }\n}\nexport default new OrderService();","map":{"version":3,"names":["apiClient","API_ENDPOINTS","OrderService","createOrder","orderData","response","post","CREATE_ORDER","data","error","handleError","getOrders","params","get","ORDERS","getOrderDetail","id","ORDER_DETAIL","confirmOrder","shipOrder","trackingNumber","tracking_number","cancelOrder","reason","completeOrder","getLogisticsProviders","LOGISTICS_PROVIDERS","getPaymentMethods","PAYMENT_METHODS","_error$response","message","errors","status"],"sources":["D:/BaitapUIT/Mat_Ma_Hoc/new_final_project_clone/quantum-e-commerce/FE/src/services/orderService.js"],"sourcesContent":["import apiClient from '../api/client';\r\nimport { API_ENDPOINTS } from '../api/endpoints';\r\n\r\nclass OrderService {\r\n  // Tạo đơn hàng\r\n  async createOrder(orderData) {\r\n    try {\r\n      const response = await apiClient.post(API_ENDPOINTS.CREATE_ORDER, orderData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Lấy danh sách đơn hàng\r\n  async getOrders(params = {}) {\r\n    try {\r\n      const response = await apiClient.get(API_ENDPOINTS.ORDERS, { params });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Lấy chi tiết đơn hàng\r\n  async getOrderDetail(id) {\r\n    try {\r\n      const response = await apiClient.get(API_ENDPOINTS.ORDER_DETAIL(id));\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Xác nhận đơn hàng (seller)\r\n  async confirmOrder(id) {\r\n    try {\r\n      const response = await apiClient.post(`${API_ENDPOINTS.ORDER_DETAIL(id)}confirm/`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Giao hàng (seller)\r\n  async shipOrder(id, trackingNumber) {\r\n    try {\r\n      const response = await apiClient.post(`${API_ENDPOINTS.ORDER_DETAIL(id)}ship/`, {\r\n        tracking_number: trackingNumber\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Hủy đơn hàng\r\n  async cancelOrder(id, reason) {\r\n    try {\r\n      const response = await apiClient.post(`${API_ENDPOINTS.ORDER_DETAIL(id)}cancel/`, { reason });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Xác nhận nhận hàng (buyer)\r\n  async completeOrder(id) {\r\n    try {\r\n      const response = await apiClient.post(`${API_ENDPOINTS.ORDER_DETAIL(id)}complete/`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Lấy đơn vị vận chuyển\r\n  async getLogisticsProviders() {\r\n    try {\r\n      const response = await apiClient.get(API_ENDPOINTS.LOGISTICS_PROVIDERS);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Lấy phương thức thanh toán\r\n  async getPaymentMethods() {\r\n    try {\r\n      const response = await apiClient.get(API_ENDPOINTS.PAYMENT_METHODS);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  handleError(error) {\r\n    if (error.response?.data) {\r\n      return {\r\n        message: error.response.data.message || 'Có lỗi xảy ra',\r\n        errors: error.response.data.errors || {},\r\n        status: error.response.status\r\n      };\r\n    }\r\n    return { message: 'Lỗi kết nối mạng', errors: {}, status: 0 };\r\n  }\r\n}\r\n\r\nexport default new OrderService();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}