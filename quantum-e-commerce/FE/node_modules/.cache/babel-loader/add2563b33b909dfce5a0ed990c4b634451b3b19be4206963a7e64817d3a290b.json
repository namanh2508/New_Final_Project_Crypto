{"ast":null,"code":"import apiClient from'../api/client';import{API_ENDPOINTS}from'../api/endpoints';class SellerService{// Đăng ký seller\nasync register(userData){try{const response=await apiClient.post(API_ENDPOINTS.SELLER_REGISTER,userData);return response.data;}catch(error){throw this.handleError(error);}}// Đăng nhập seller\nasync login(credentials){try{const response=await apiClient.post(API_ENDPOINTS.SELLER_LOGIN,credentials);const{tokens,seller}=response.data;localStorage.setItem('access_token',tokens.access);localStorage.setItem('refresh_token',tokens.refresh);localStorage.setItem('user_type','seller');localStorage.setItem('user_data',JSON.stringify(seller));return response.data;}catch(error){throw this.handleError(error);}}// Lấy thông tin profile seller\nasync getProfile(){try{const response=await apiClient.get(API_ENDPOINTS.SELLER_PROFILE);return response.data;}catch(error){throw this.handleError(error);}}// Cập nhật thông tin seller\nasync updateProfile(userData){try{const response=await apiClient.put(API_ENDPOINTS.SELLER_PROFILE,userData);return response.data;}catch(error){throw this.handleError(error);}}// Lấy danh sách sellers\nasync getSellers(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};try{const response=await apiClient.get(API_ENDPOINTS.SELLERS,{params});return response.data;}catch(error){throw this.handleError(error);}}// Lấy chi tiết seller\nasync getSellerDetail(sellerId){try{const response=await apiClient.get(API_ENDPOINTS.SELLER_DETAIL(sellerId));return response.data;}catch(error){throw this.handleError(error);}}// Lấy sản phẩm của seller\nasync getSellerProducts(sellerId){let params=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};try{const response=await apiClient.get(\"\".concat(API_ENDPOINTS.SELLER_DETAIL(sellerId),\"products/\"),{params});return response.data;}catch(error){throw this.handleError(error);}}// Lấy thống kê seller\nasync getSellerStats(sellerId){try{const response=await apiClient.get(\"\".concat(API_ENDPOINTS.SELLER_DETAIL(sellerId),\"stats/\"));return response.data;}catch(error){throw this.handleError(error);}}handleError(error){var _error$response;if((_error$response=error.response)!==null&&_error$response!==void 0&&_error$response.data){return{message:error.response.data.message||'Có lỗi xảy ra',errors:error.response.data.errors||{},status:error.response.status};}return{message:'Lỗi kết nối mạng',errors:{},status:0};}}export default new SellerService();","map":{"version":3,"names":["apiClient","API_ENDPOINTS","SellerService","register","userData","response","post","SELLER_REGISTER","data","error","handleError","login","credentials","SELLER_LOGIN","tokens","seller","localStorage","setItem","access","refresh","JSON","stringify","getProfile","get","SELLER_PROFILE","updateProfile","put","getSellers","params","arguments","length","undefined","SELLERS","getSellerDetail","sellerId","SELLER_DETAIL","getSellerProducts","concat","getSellerStats","_error$response","message","errors","status"],"sources":["D:/BaitapUIT/Mat_Ma_Hoc/new_final_project_clone/quantum-e-commerce/FE/src/services/sellerService.js"],"sourcesContent":["import apiClient from '../api/client';\r\nimport { API_ENDPOINTS } from '../api/endpoints';\r\n\r\nclass SellerService {\r\n  // Đăng ký seller\r\n  async register(userData) {\r\n    try {\r\n      const response = await apiClient.post(API_ENDPOINTS.SELLER_REGISTER, userData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Đăng nhập seller\r\n  async login(credentials) {\r\n    try {\r\n      const response = await apiClient.post(API_ENDPOINTS.SELLER_LOGIN, credentials);\r\n      const { tokens, seller } = response.data;\r\n      \r\n      localStorage.setItem('access_token', tokens.access);\r\n      localStorage.setItem('refresh_token', tokens.refresh);\r\n      localStorage.setItem('user_type', 'seller');\r\n      localStorage.setItem('user_data', JSON.stringify(seller));\r\n      \r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Lấy thông tin profile seller\r\n  async getProfile() {\r\n    try {\r\n      const response = await apiClient.get(API_ENDPOINTS.SELLER_PROFILE);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Cập nhật thông tin seller\r\n  async updateProfile(userData) {\r\n    try {\r\n      const response = await apiClient.put(API_ENDPOINTS.SELLER_PROFILE, userData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Lấy danh sách sellers\r\n  async getSellers(params = {}) {\r\n    try {\r\n      const response = await apiClient.get(API_ENDPOINTS.SELLERS, { params });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Lấy chi tiết seller\r\n  async getSellerDetail(sellerId) {\r\n    try {\r\n      const response = await apiClient.get(API_ENDPOINTS.SELLER_DETAIL(sellerId));\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Lấy sản phẩm của seller\r\n  async getSellerProducts(sellerId, params = {}) {\r\n    try {\r\n      const response = await apiClient.get(`${API_ENDPOINTS.SELLER_DETAIL(sellerId)}products/`, { params });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Lấy thống kê seller\r\n  async getSellerStats(sellerId) {\r\n    try {\r\n      const response = await apiClient.get(`${API_ENDPOINTS.SELLER_DETAIL(sellerId)}stats/`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  handleError(error) {\r\n    if (error.response?.data) {\r\n      return {\r\n        message: error.response.data.message || 'Có lỗi xảy ra',\r\n        errors: error.response.data.errors || {},\r\n        status: error.response.status\r\n      };\r\n    }\r\n    return { message: 'Lỗi kết nối mạng', errors: {}, status: 0 };\r\n  }\r\n}\r\n\r\nexport default new SellerService();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}