{"ast":null,"code":"import apiClient from'../api/client';import{API_ENDPOINTS}from'../api/endpoints';class BuyerService{// Đăng ký buyer\nasync register(userData){try{const response=await apiClient.post(API_ENDPOINTS.BUYER_REGISTER,userData);return response.data;}catch(error){throw this.handleError(error);}}// Đăng nhập buyer\nasync login(credentials){try{const response=await apiClient.post(API_ENDPOINTS.BUYER_LOGIN,credentials);const{tokens,buyer}=response.data;localStorage.setItem('access_token',tokens.access);localStorage.setItem('refresh_token',tokens.refresh);localStorage.setItem('user_type','buyer');localStorage.setItem('user_data',JSON.stringify(buyer));return response.data;}catch(error){throw this.handleError(error);}}// Lấy thông tin profile\nasync getProfile(){try{const response=await apiClient.get(API_ENDPOINTS.BUYER_PROFILE);return response.data;}catch(error){throw this.handleError(error);}}// Cập nhật profile\nasync updateProfile(userData){try{const response=await apiClient.put(API_ENDPOINTS.BUYER_PROFILE,userData);return response.data;}catch(error){throw this.handleError(error);}}// Lấy danh sách địa chỉ\nasync getAddresses(){try{const response=await apiClient.get(API_ENDPOINTS.BUYER_ADDRESSES);return response.data;}catch(error){throw this.handleError(error);}}// Thêm địa chỉ mới\nasync addAddress(addressData){try{const response=await apiClient.post(API_ENDPOINTS.BUYER_ADDRESSES,addressData);return response.data;}catch(error){throw this.handleError(error);}}// Cập nhật địa chỉ\nasync updateAddress(addressId,addressData){try{const response=await apiClient.put(\"\".concat(API_ENDPOINTS.BUYER_ADDRESSES).concat(addressId,\"/\"),addressData);return response.data;}catch(error){throw this.handleError(error);}}// Xóa địa chỉ\nasync deleteAddress(addressId){try{const response=await apiClient.delete(\"\".concat(API_ENDPOINTS.BUYER_ADDRESSES).concat(addressId,\"/\"));return response.data;}catch(error){throw this.handleError(error);}}handleError(error){var _error$response;if((_error$response=error.response)!==null&&_error$response!==void 0&&_error$response.data){return{message:error.response.data.message||'Có lỗi xảy ra',errors:error.response.data.errors||{},status:error.response.status};}return{message:'Lỗi kết nối mạng',errors:{},status:0};}async createDigitalSignature(userId){try{// Gọi API để tạo chữ ký số cho người dùng\nconst response=await apiClient.post(\"/api/buyers/\".concat(userId,\"/create-digital-signature/\"));return response.data;}catch(error){// Xử lý lỗi\nthrow this.handleError(error);// Nên dùng handleError để thống nhất\n}}}const buyerService=new BuyerService();export default buyerService;","map":{"version":3,"names":["apiClient","API_ENDPOINTS","BuyerService","register","userData","response","post","BUYER_REGISTER","data","error","handleError","login","credentials","BUYER_LOGIN","tokens","buyer","localStorage","setItem","access","refresh","JSON","stringify","getProfile","get","BUYER_PROFILE","updateProfile","put","getAddresses","BUYER_ADDRESSES","addAddress","addressData","updateAddress","addressId","concat","deleteAddress","delete","_error$response","message","errors","status","createDigitalSignature","userId","buyerService"],"sources":["D:/BaitapUIT/Mat_Ma_Hoc/new_final_project_clone/quantum-e-commerce/FE/src/services/buyerService.js"],"sourcesContent":["import apiClient from '../api/client';\r\nimport { API_ENDPOINTS } from '../api/endpoints';\r\n\r\nclass BuyerService {\r\n  // Đăng ký buyer\r\n  async register(userData) {\r\n    try {\r\n      const response = await apiClient.post(API_ENDPOINTS.BUYER_REGISTER, userData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Đăng nhập buyer\r\n  async login(credentials) {\r\n    try {\r\n      const response = await apiClient.post(API_ENDPOINTS.BUYER_LOGIN, credentials);\r\n      const { tokens, buyer } = response.data;\r\n      \r\n      localStorage.setItem('access_token', tokens.access);\r\n      localStorage.setItem('refresh_token', tokens.refresh);\r\n      localStorage.setItem('user_type', 'buyer');\r\n      localStorage.setItem('user_data', JSON.stringify(buyer));\r\n      \r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Lấy thông tin profile\r\n  async getProfile() {\r\n    try {\r\n      const response = await apiClient.get(API_ENDPOINTS.BUYER_PROFILE);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Cập nhật profile\r\n  async updateProfile(userData) {\r\n    try {\r\n      const response = await apiClient.put(API_ENDPOINTS.BUYER_PROFILE, userData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Lấy danh sách địa chỉ\r\n  async getAddresses() {\r\n    try {\r\n      const response = await apiClient.get(API_ENDPOINTS.BUYER_ADDRESSES);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Thêm địa chỉ mới\r\n  async addAddress(addressData) {\r\n    try {\r\n      const response = await apiClient.post(API_ENDPOINTS.BUYER_ADDRESSES, addressData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Cập nhật địa chỉ\r\n  async updateAddress(addressId, addressData) {\r\n    try {\r\n      const response = await apiClient.put(`${API_ENDPOINTS.BUYER_ADDRESSES}${addressId}/`, addressData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Xóa địa chỉ\r\n  async deleteAddress(addressId) {\r\n    try {\r\n      const response = await apiClient.delete(`${API_ENDPOINTS.BUYER_ADDRESSES}${addressId}/`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  handleError(error) {\r\n    if (error.response?.data) {\r\n      return {\r\n        message: error.response.data.message || 'Có lỗi xảy ra',\r\n        errors: error.response.data.errors || {},\r\n        status: error.response.status\r\n      };\r\n    }\r\n    return { message: 'Lỗi kết nối mạng', errors: {}, status: 0 };\r\n  }\r\n  async createDigitalSignature(userId) {\r\n    try {\r\n      // Gọi API để tạo chữ ký số cho người dùng\r\n      const response = await apiClient.post(`/api/buyers/${userId}/create-digital-signature/`);\r\n      return response.data;\r\n    } catch (error) {\r\n      // Xử lý lỗi\r\n      throw this.handleError(error); // Nên dùng handleError để thống nhất\r\n    }\r\n  }\r\n}\r\n\r\nconst buyerService = new BuyerService();\r\nexport default buyerService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}