{"ast":null,"code":"import apiClient from '../api/client';\nimport { API_ENDPOINTS } from '../api/endpoints';\nclass BuyerService {\n  // Đăng ký buyer\n  async register(userData) {\n    try {\n      const response = await apiClient.post(API_ENDPOINTS.BUYER_REGISTER, userData);\n      return response.data;\n    } catch (error) {\n      throw this.handleError(error);\n    }\n  }\n\n  // Đăng nhập buyer\n  async login(credentials) {\n    try {\n      const response = await apiClient.post(API_ENDPOINTS.BUYER_LOGIN, credentials);\n      const {\n        tokens,\n        buyer\n      } = response.data;\n      localStorage.setItem('access_token', tokens.access);\n      localStorage.setItem('refresh_token', tokens.refresh);\n      localStorage.setItem('user_type', 'buyer');\n      localStorage.setItem('user_data', JSON.stringify(buyer));\n      return response.data;\n    } catch (error) {\n      throw this.handleError(error);\n    }\n  }\n\n  // Lấy thông tin profile\n  async getProfile() {\n    try {\n      const response = await apiClient.get(API_ENDPOINTS.BUYER_PROFILE);\n      return response.data;\n    } catch (error) {\n      throw this.handleError(error);\n    }\n  }\n\n  // Cập nhật profile\n  async updateProfile(userData) {\n    try {\n      const response = await apiClient.put(API_ENDPOINTS.BUYER_PROFILE, userData);\n      return response.data;\n    } catch (error) {\n      throw this.handleError(error);\n    }\n  }\n\n  // Lấy danh sách địa chỉ\n  async getAddresses() {\n    try {\n      const response = await apiClient.get(API_ENDPOINTS.BUYER_ADDRESSES);\n      return response.data;\n    } catch (error) {\n      throw this.handleError(error);\n    }\n  }\n\n  // Thêm địa chỉ mới\n  async addAddress(addressData) {\n    try {\n      const response = await apiClient.post(API_ENDPOINTS.BUYER_ADDRESSES, addressData);\n      return response.data;\n    } catch (error) {\n      throw this.handleError(error);\n    }\n  }\n\n  // Cập nhật địa chỉ\n  async updateAddress(addressId, addressData) {\n    try {\n      const response = await apiClient.put(`${API_ENDPOINTS.BUYER_ADDRESSES}${addressId}/`, addressData);\n      return response.data;\n    } catch (error) {\n      throw this.handleError(error);\n    }\n  }\n\n  // Xóa địa chỉ\n  async deleteAddress(addressId) {\n    try {\n      const response = await apiClient.delete(`${API_ENDPOINTS.BUYER_ADDRESSES}${addressId}/`);\n      return response.data;\n    } catch (error) {\n      throw this.handleError(error);\n    }\n  }\n  handleError(error) {\n    var _error$response;\n    if ((_error$response = error.response) !== null && _error$response !== void 0 && _error$response.data) {\n      return {\n        message: error.response.data.message || 'Có lỗi xảy ra',\n        errors: error.response.data.errors || {},\n        status: error.response.status\n      };\n    }\n    return {\n      message: 'Lỗi kết nối mạng',\n      errors: {},\n      status: 0\n    };\n  }\n  async createDigitalSignature(userId) {\n    try {\n      // Gọi API để tạo chữ ký số cho người dùng\n      const response = await apiClient.post(`/api/buyers/${userId}/create-digital-signature/`);\n      return response.data;\n    } catch (error) {\n      // Xử lý lỗi\n      throw this.handleError(error); // Nên dùng handleError để thống nhất\n    }\n  }\n}\nconst buyerService = new BuyerService();\nexport default buyerService;","map":{"version":3,"names":["apiClient","API_ENDPOINTS","BuyerService","register","userData","response","post","BUYER_REGISTER","data","error","handleError","login","credentials","BUYER_LOGIN","tokens","buyer","localStorage","setItem","access","refresh","JSON","stringify","getProfile","get","BUYER_PROFILE","updateProfile","put","getAddresses","BUYER_ADDRESSES","addAddress","addressData","updateAddress","addressId","deleteAddress","delete","_error$response","message","errors","status","createDigitalSignature","userId","buyerService"],"sources":["D:/BaitapUIT/Mat_Ma_Hoc/new_final_project_clone/quantum-e-commerce/FE/src/services/buyerService.js"],"sourcesContent":["import apiClient from '../api/client';\r\nimport { API_ENDPOINTS } from '../api/endpoints';\r\n\r\nclass BuyerService {\r\n  // Đăng ký buyer\r\n  async register(userData) {\r\n    try {\r\n      const response = await apiClient.post(API_ENDPOINTS.BUYER_REGISTER, userData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Đăng nhập buyer\r\n  async login(credentials) {\r\n    try {\r\n      const response = await apiClient.post(API_ENDPOINTS.BUYER_LOGIN, credentials);\r\n      const { tokens, buyer } = response.data;\r\n      \r\n      localStorage.setItem('access_token', tokens.access);\r\n      localStorage.setItem('refresh_token', tokens.refresh);\r\n      localStorage.setItem('user_type', 'buyer');\r\n      localStorage.setItem('user_data', JSON.stringify(buyer));\r\n      \r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Lấy thông tin profile\r\n  async getProfile() {\r\n    try {\r\n      const response = await apiClient.get(API_ENDPOINTS.BUYER_PROFILE);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Cập nhật profile\r\n  async updateProfile(userData) {\r\n    try {\r\n      const response = await apiClient.put(API_ENDPOINTS.BUYER_PROFILE, userData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Lấy danh sách địa chỉ\r\n  async getAddresses() {\r\n    try {\r\n      const response = await apiClient.get(API_ENDPOINTS.BUYER_ADDRESSES);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Thêm địa chỉ mới\r\n  async addAddress(addressData) {\r\n    try {\r\n      const response = await apiClient.post(API_ENDPOINTS.BUYER_ADDRESSES, addressData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Cập nhật địa chỉ\r\n  async updateAddress(addressId, addressData) {\r\n    try {\r\n      const response = await apiClient.put(`${API_ENDPOINTS.BUYER_ADDRESSES}${addressId}/`, addressData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Xóa địa chỉ\r\n  async deleteAddress(addressId) {\r\n    try {\r\n      const response = await apiClient.delete(`${API_ENDPOINTS.BUYER_ADDRESSES}${addressId}/`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  handleError(error) {\r\n    if (error.response?.data) {\r\n      return {\r\n        message: error.response.data.message || 'Có lỗi xảy ra',\r\n        errors: error.response.data.errors || {},\r\n        status: error.response.status\r\n      };\r\n    }\r\n    return { message: 'Lỗi kết nối mạng', errors: {}, status: 0 };\r\n  }\r\n  async createDigitalSignature(userId) {\r\n    try {\r\n      // Gọi API để tạo chữ ký số cho người dùng\r\n      const response = await apiClient.post(`/api/buyers/${userId}/create-digital-signature/`);\r\n      return response.data;\r\n    } catch (error) {\r\n      // Xử lý lỗi\r\n      throw this.handleError(error); // Nên dùng handleError để thống nhất\r\n    }\r\n  }\r\n}\r\n\r\nconst buyerService = new BuyerService();\r\nexport default buyerService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}