{"ast":null,"code":"import apiClient from '../api/client';\nimport { API_ENDPOINTS } from '../api/endpoints';\nclass SellerService {\n  // Đăng ký seller\n  async register(userData) {\n    try {\n      const response = await apiClient.post(API_ENDPOINTS.SELLER_REGISTER, userData);\n      return response.data;\n    } catch (error) {\n      throw this.handleError(error);\n    }\n  }\n\n  // Đăng nhập seller\n  async login(credentials) {\n    try {\n      const response = await apiClient.post(API_ENDPOINTS.SELLER_LOGIN, credentials);\n      const {\n        tokens,\n        seller\n      } = response.data;\n      localStorage.setItem('access_token', tokens.access);\n      localStorage.setItem('refresh_token', tokens.refresh);\n      localStorage.setItem('user_type', 'seller');\n      localStorage.setItem('user_data', JSON.stringify(seller));\n      return response.data;\n    } catch (error) {\n      throw this.handleError(error);\n    }\n  }\n\n  // Lấy thông tin profile seller\n  async getProfile() {\n    try {\n      const response = await apiClient.get(API_ENDPOINTS.SELLER_PROFILE);\n      return response.data;\n    } catch (error) {\n      throw this.handleError(error);\n    }\n  }\n\n  // Cập nhật thông tin seller\n  async updateProfile(userData) {\n    try {\n      const response = await apiClient.put(API_ENDPOINTS.SELLER_PROFILE, userData);\n      return response.data;\n    } catch (error) {\n      throw this.handleError(error);\n    }\n  }\n\n  // Lấy danh sách sellers\n  async getSellers(params = {}) {\n    try {\n      const response = await apiClient.get(API_ENDPOINTS.SELLERS, {\n        params\n      });\n      return response.data;\n    } catch (error) {\n      throw this.handleError(error);\n    }\n  }\n\n  // Lấy chi tiết seller\n  async getSellerDetail(sellerId) {\n    try {\n      const response = await apiClient.get(API_ENDPOINTS.SELLER_DETAIL(sellerId));\n      return response.data;\n    } catch (error) {\n      throw this.handleError(error);\n    }\n  }\n\n  // Lấy sản phẩm của seller\n  async getSellerProducts(sellerId, params = {}) {\n    try {\n      const response = await apiClient.get(`${API_ENDPOINTS.SELLER_DETAIL(sellerId)}products/`, {\n        params\n      });\n      return response.data;\n    } catch (error) {\n      throw this.handleError(error);\n    }\n  }\n\n  // Lấy thống kê seller\n  async getSellerStats(sellerId) {\n    try {\n      const response = await apiClient.get(`${API_ENDPOINTS.SELLER_DETAIL(sellerId)}stats/`);\n      return response.data;\n    } catch (error) {\n      throw this.handleError(error);\n    }\n  }\n  handleError(error) {\n    var _error$response;\n    if ((_error$response = error.response) !== null && _error$response !== void 0 && _error$response.data) {\n      return {\n        message: error.response.data.message || 'Có lỗi xảy ra',\n        errors: error.response.data.errors || {},\n        status: error.response.status\n      };\n    }\n    return {\n      message: 'Lỗi kết nối mạng',\n      errors: {},\n      status: 0\n    };\n  }\n}\nexport default new SellerService();","map":{"version":3,"names":["apiClient","API_ENDPOINTS","SellerService","register","userData","response","post","SELLER_REGISTER","data","error","handleError","login","credentials","SELLER_LOGIN","tokens","seller","localStorage","setItem","access","refresh","JSON","stringify","getProfile","get","SELLER_PROFILE","updateProfile","put","getSellers","params","SELLERS","getSellerDetail","sellerId","SELLER_DETAIL","getSellerProducts","getSellerStats","_error$response","message","errors","status"],"sources":["D:/BaitapUIT/Mat_Ma_Hoc/new_final_project_clone/quantum-e-commerce/FE/src/services/sellerService.js"],"sourcesContent":["import apiClient from '../api/client';\r\nimport { API_ENDPOINTS } from '../api/endpoints';\r\n\r\nclass SellerService {\r\n  // Đăng ký seller\r\n  async register(userData) {\r\n    try {\r\n      const response = await apiClient.post(API_ENDPOINTS.SELLER_REGISTER, userData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Đăng nhập seller\r\n  async login(credentials) {\r\n    try {\r\n      const response = await apiClient.post(API_ENDPOINTS.SELLER_LOGIN, credentials);\r\n      const { tokens, seller } = response.data;\r\n      \r\n      localStorage.setItem('access_token', tokens.access);\r\n      localStorage.setItem('refresh_token', tokens.refresh);\r\n      localStorage.setItem('user_type', 'seller');\r\n      localStorage.setItem('user_data', JSON.stringify(seller));\r\n      \r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Lấy thông tin profile seller\r\n  async getProfile() {\r\n    try {\r\n      const response = await apiClient.get(API_ENDPOINTS.SELLER_PROFILE);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Cập nhật thông tin seller\r\n  async updateProfile(userData) {\r\n    try {\r\n      const response = await apiClient.put(API_ENDPOINTS.SELLER_PROFILE, userData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Lấy danh sách sellers\r\n  async getSellers(params = {}) {\r\n    try {\r\n      const response = await apiClient.get(API_ENDPOINTS.SELLERS, { params });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Lấy chi tiết seller\r\n  async getSellerDetail(sellerId) {\r\n    try {\r\n      const response = await apiClient.get(API_ENDPOINTS.SELLER_DETAIL(sellerId));\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Lấy sản phẩm của seller\r\n  async getSellerProducts(sellerId, params = {}) {\r\n    try {\r\n      const response = await apiClient.get(`${API_ENDPOINTS.SELLER_DETAIL(sellerId)}products/`, { params });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  // Lấy thống kê seller\r\n  async getSellerStats(sellerId) {\r\n    try {\r\n      const response = await apiClient.get(`${API_ENDPOINTS.SELLER_DETAIL(sellerId)}stats/`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw this.handleError(error);\r\n    }\r\n  }\r\n\r\n  handleError(error) {\r\n    if (error.response?.data) {\r\n      return {\r\n        message: error.response.data.message || 'Có lỗi xảy ra',\r\n        errors: error.response.data.errors || {},\r\n        status: error.response.status\r\n      };\r\n    }\r\n    return { message: 'Lỗi kết nối mạng', errors: {}, status: 0 };\r\n  }\r\n}\r\n\r\nexport default new SellerService();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}